
Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.

 
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        vector<int> m1(26,0),m2(26,0);
        
        int l1=s1.length();
        int l2=s2.length();
        
        if(l1>l2)
            return false;
        
        for(int i=0;i<l1;i++){
            m1[s1[i]-'a']++;
            m2[s2[i]-'a']++;
        }
        if(m1==m2)
            return true;
        
        for(int i=l1;i<l2;i++){
            m2[s2[i-l1]-'a']--;
            m2[s2[i]-'a']++;
            if(m1==m2)
                return true;
        }
        
        return false;
    }
};